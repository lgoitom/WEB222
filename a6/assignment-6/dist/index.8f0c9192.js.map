{"mappings":"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","sources":["src/js/app.js"],"sourcesContent":["/**\n * WEB222 â€“ Assignment 06\n *\n * I declare that this assignment is my own work in accordance with\n * Seneca Academic Policy. No part of this assignment has been\n * copied manually or electronically from any other source\n * (including web sites) or distributed to other students.\n *\n * Please update the following with your information:\n *\n *      Name:       <Luwam Goitom-Worre>\n *      Student ID: <156652224>\n *      Date:       <December 13, 2023>\n */\n\n// All of our data is available on the global `window` object.\n// Create local variables to work with it in this file.\nconst { artists, songs } = window;\n// For debugging, display all of our data in the console. You can remove this later.\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const displayArtists = () => {\n    //menu variable is assigned to any object with the menu tag\n    const menu = document.querySelector(\"#menu\");\n    //iterates through each artist in array and creates a button for each obe\n    artists.forEach((artist, index) => {\n      const button = createButton(artist, index);\n      menu.appendChild(button);\n    });\n  };\n\n  const artistDetails = (index) => {\n    //artists array is assigned to variable artist\n    const artist = artists[index];\n    //sent to other functions to locate the artist and display their song list\n    displaySelectedArtist(artist);\n    displaySongs(artist);\n  };\n\n  const createButton = (artist, index) => {\n    //button variable is created to hold button element\n    const button = document.createElement(\"button\");\n    //text on the button is artist name\n    button.textContent = artist.name;\n    button.classList.add(\"blue-card\");\n    //when the button is clicked it dusplays the artists links\n    button.addEventListener(\"click\", () => artistDetails(index));\n    return button;\n  };\n\n  const displaySelectedArtist = (artist) => {\n    //selects element with selected-artist id and assigns it to variable\n    const selected = document.querySelector(\"#selected-artist\");\n    selected.classList.add(\"name\");\n    //artist url links are formatted as such and assigned to variable\n    const links = artist.urls\n      .map((link) => `<a href=\"${link.url}\" target=\"_blank\">${link.name}</a>`)\n      .join(\", \");\n    //inner html is the string created with the artist name and urls on same line\n    selected.innerHTML = `${artist.name} (${links})`;\n  };\n  const formatDuration = (duration) => {\n    //calculates the time of the song from seconds to minutes\n    return `${Math.floor(duration / 60)}:${(duration % 60).toString().padStart(2, \"0\")}`;\n  };\n\n  const displaySongCards = (songs) => {\n    const cardContainer = document.getElementById(\"song-cards\");\n    cardContainer.innerHTML = \"\"; // Clear previous cards\n\n    //iterates through the song array and creates a card for each element\n    songs.forEach((song) => {\n      const card = createSongCard(song);\n      //appends newly created card to card array\n      cardContainer.appendChild(card);\n    });\n  };\n\n  //creates the card for the song\n  const createSongCard = (song) => {\n    //card container for the song\n    const card = document.createElement(\"div\");\n    card.classList.add(\"song-card\");\n\n    //card container for song image\n    const image = document.createElement(\"img\");\n    image.src = song.image;\n\n    //card container for the song ttitle\n    const title = document.createElement(\"h3\");\n    title.textContent = song.title;\n\n    //card container for the year\n    const year = document.createElement(\"p\");\n    year.textContent = `Year: ${song.year}`;\n\n    //card container for the duration\n    const duration = document.createElement(\"p\");\n    duration.textContent = `Duration: ${formatDuration(song.duration)}`;\n\n    //element 'a' links to the song\n    const url = document.createElement(\"a\");\n    url.href = song.url;\n    url.target = \"_blank\";\n    url.textContent = \"Listen\";\n\n    //appends all elements to the card\n    card.appendChild(image);\n    card.appendChild(title);\n    card.appendChild(year);\n    card.appendChild(duration);\n    card.appendChild(url);\n\n    return card;\n  };\n\n  const displaySongs = (artist) => {\n    //filters through song array to find where the aritstID of a song matches an artistID in the artist array\n    const filtered = songs.filter((song) => song.artistID === artist.artistID);\n    displaySongCards(filtered);\n  };\n\n  displayArtists();\n  \n});\n"],"names":[],"version":3,"file":"index.8f0c9192.js.map","sourceRoot":"/__parcel_source_root/"}